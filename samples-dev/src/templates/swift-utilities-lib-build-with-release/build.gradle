// Currently cannot use the plugins { } block to reference plugins in included builds
// Use the buildscript { } block instead
buildscript {
    dependencies {
        classpath "org.gradle.samples:release:1.0"
    }
}
plugins {
    id 'swift-library'
    id 'xcode'
    id 'xctest'
}

// Apply the release plugin explicitly as we can't use the plugins { } block
apply plugin: 'org.gradle.samples.release'

group = 'org.gradle.swift-samples'
version = '1.0.0'

library {
    dependencies {
        api 'org.gradle.swift-samples:list:1.0.0'
    }
}

def linuxMainWorkaround(Project project, File testDir) {
    project.xctest {
        source.from project.fileTree(dir: testDir, include: '**/*.swift', exclude: 'LinuxMain.swift')
    }

    if (System.properties['os.name'].equals("Linux")) {
        // On linux, rename LinuxMain.swift -> main.swift
        def renameLinuxMain = project.tasks.create("renameLinuxMain", Sync) {
            from testDir
            into temporaryDir
            include 'LinuxMain.swift'
            rename { 'main.swift' }
        }
        project.xctest {
            source.from renameLinuxMain
        }
    }
}

linuxMainWorkaround(project, file('src/test/swift'))
