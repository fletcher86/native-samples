project(":list") {
	apply plugin: "cpp"
	model {
		components { main(NativeLibrarySpec) }

		// For any shared library binaries built with Visual C++,
		// define the DLL_EXPORT macro
		binaries {
			withType(SharedLibraryBinarySpec) {
				if (toolChain in VisualCpp) {
					cppCompiler.define "DLL_EXPORT"
				}
			}
		}
	}
}

project(":utilities") {
	apply plugin: "cpp"

	model {
		components {
			main(NativeLibrarySpec) {
				sources {
					cpp {
						lib project: ':list', library: 'main'
					}
				}
			}
		}
		// For any shared library binaries built with Visual C++,
		// define the DLL_EXPORT macro
		binaries {
			withType(SharedLibraryBinarySpec) {
				if (toolChain in VisualCpp) {
					cppCompiler.define "DLL_EXPORT"
				}
			}
		}

	}
}

project(":app") {
	apply plugin: "cpp"

	model {
		components {
			main(NativeExecutableSpec) {
				sources {
					cpp {
						lib project: ':utilities', library: 'main'
					}
				}
			}
		}
	}
}
